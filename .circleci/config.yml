version: 2

defaults: &defaults
  working_directory: ~/hela-config-tunnckocore
  docker:
    - image: circleci/node:8

restore_modules_cache: &restore_modules_cache
  restore_cache:
    keys:
    - hela-config-tunnckocore-{{ checksum "yarn.lock" }}
    # fallback to using the latest cache if no exact match is found
    - hela-config-tunnckocore-


jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - *restore_modules_cache
      - run:
          name: Installing Dependencies
          command: yarn install
      - save_cache:
          key: hela-config-tunnckocore-{{ checksum "yarn.lock" }}
          paths: node_modules
      - run:
          name: Remove node_modules to cleanup workspace
          command: rm -rf node_modules

  test:
    <<: *defaults
    steps:
      - checkout
      - *restore_modules_cache
      - run:
          name: Running tests and checks
          command: yarn test
      - run:
          name: Sending test coverage to CodeCov
          command: bash <(curl -s https://codecov.io/bash)

  build:
    <<: *defaults
    steps:
      - checkout
      - *restore_modules_cache
      - run:
          name: Creating distributable files
          command: echo ok
      - store_artifacts:
          path: dist
          destination: hela-config-tunnckocore

  # TODO: uncomment when ready
  publish:
    <<: *defaults
    steps:
      - checkout
      - *restore_modules_cache
      # - add_ssh_keys:
      #     fingerprints:
      #       - "b3:e4:6c:6e:48:9f:a2:6b:33:43:8d:3b:12:06:52:27"
      - run:
          name: Setup NPM and GitHub
          command: |
            # Foobie comment.
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            yarn config set version-git-message "chore(release): v%s"
            yarn config set version-sign-git-tag true
            git config --global user.name "Charlike Mike Reagent"
            git config --global user.email "olsten.larck@gmail.com"
      - run:
          name: Releasing to NPM and GitHub
          command: yarn start release

workflows:
  version: 2
  automated:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
            - test
      # TODO: uncomment when ready
      - publish:
          filters:
           branches:
             only:
               - master
          context: org-global
          requires:
            - install
            - test
            - build
